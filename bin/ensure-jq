#!/bin/bash

### Ensures the 'jq' command is present
# It checks for the 'jq' command, and, if not found,
# downloads a standalone binary from the official repository.
# Supports only Linux OS and the amd64, i386, arm64 and armhf architectures.


## Activate the project environment
source "$(dirname "$(readlink -f "$0")")/activate"


## Exit if command is found
command -v 'jq' > /dev/null && exit 0


## Define variables

# the command and its version
COMMAND='jq'
VERSION="1.8.1"

# the download target
TARGET="$ANSIBLESITE_EXTERNAL_BIN/$COMMAND"
TARGET_PART="$TARGET.part"

# OS and architecture
if [[ "$(uname -s)" != 'Linux' ]]; then
    echo "$0: Unsupported OS. Install '$COMMAND' manually."
    exit 1
fi

case "$(uname -m)" in
    x86_64)     ARCH="amd64"    ;;
    i386|i686)  ARCH="i386"     ;;
    aarch64)    ARCH="arm64"    ;;
    armv7l)     ARCH="armhf"    ;;
    *)          
        echo "$0: Unsupported architecture. Install '$COMMAND' manually."
        exit 1
        ;;
esac

# the download URL
DOWNLOAD_URL="https://github.com/jqlang/jq/releases/download/jq-$VERSION/jq-linux-$ARCH"


## Download the standalone binary

# create parent directory for the download target
mkdir -p "$(dirname "$TARGET")"

# download the binary to a .part file, exit if not successful
wget "$DOWNLOAD_URL" -O "$TARGET_PART" || exit

# make the file executable
chmod +x "$TARGET_PART"

# rename the .part file to the final name
mv "$TARGET_PART" "$TARGET"
